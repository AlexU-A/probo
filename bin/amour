#! /usr/bin/env node
var path = require('path'),
    util = require('util'),
    fs = require('fs');

var Loader = require('yaml-config-loader');
var yargs = require('yargs');
var loader = new Loader();

amour = require('../index');

var argv = yargs
  .describe('config', 'A YAML config file or directory of yaml files to load, can be invoked multiple times and later files will override earlier.')
  .alias('config', 'c')
  .argv;

loader.add(path.resolve(path.join(__dirname, '..', 'defaults.yaml')), { filterKeys: true });
loader.addAndNormalizeObject(process.env);

if (argv.config) {
  if (typeof argv.config === 'string') {
    argv.config = [ argv.config ];
  }
  for (i in argv.config) {
    loader.add(path.resolve(argv.config[i]));
  }
}

loader.on('error', function(error){
  if (error.name === 'YAMLException') {
    console.error(util.print('Error parsing YAML file `', error.filePath, '`:', error.reason));
    console.log(error);
  }
});
loader.addAndNormalizeObject(argv);

var commandName = argv._[0];
if (commandName == undefined) {
  commandName = 'help';
}

amour.cli.loadCommands(function(error, commands) {
  if (error) throw error;
  if (!commands[commandName]) {
    console.error('ERROR: Unknown command `' + argv._[0] + '`');
    console.error('');
    console.error('run `amour help` for a list of available commands.');
    process.exit(1);
  }
  else {
    var executor = commands[commandName];
    if (executor.options) {
      executor.options(yargs);
      loader.addAndNormalizeObject(yargs.argv);
    }
    loader.load(function(error, config) {
      if (error) throw error;
      if (executor.configure) {
        executor.configure(config);
      }
      amour.config = config;
      executor.run(amour);
    });
  }
});
