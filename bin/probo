#! /usr/bin/env node
var path = require('path'),
    util = require('util'),
    fs = require('fs');

var Loader = require('yaml-config-loader');
var yargs = require('yargs');
var loader = new Loader();

loader.on('error', function(error){
  if (error.name === 'YAMLException') {
    console.error(util.print('Error parsing YAML file `', error.filePath, '`:', error.reason));
    console.log(error);
  }
});

amour = require('../index');

var argv = yargs
  .describe('config', 'A YAML config file or directory of yaml files to load, can be invoked multiple times and later files will override earlier.')
  .alias('config', 'c')
  .argv;

loader.add(path.resolve(path.join(__dirname, '..', 'defaults.yaml')));
loader.addAndNormalizeObject(process.env);

var commandName = argv._[0];

amour.cli.loadCommands(function(error, commands) {
  if (error) throw error;

  if (commandName == undefined) {
    commandName = 'help';
  }

  if (!commands[commandName]) {
    console.error('ERROR: Unknown command `' + commandName + '`');
    console.error('');
    console.error('run `amour help` for a list of available commands.');
    process.exit(1);
  }

  if (argv.config) {
    if (typeof argv.config === 'string') {
      argv.config = [ argv.config ];
    }
    for (i in argv.config) {
      loader.add(path.resolve(argv.config[i]));
    }
  }

  var executor = commands[commandName];

  if (executor.options) {
    yargs = executor.options(yargs);
    var setOptions = {};
    var key = null;
    for (key in yargs.argv) {
      if (yargs.argv[key] != undefined) {
        setOptions[key] = yargs.argv[key];
      }
    }
    loader.addAndNormalizeObject(setOptions);
  }

  loader.load(function(error, config) {
    if (error) throw error;
    if (executor.configure) {
      executor.configure(config);
    }
    amour.config = config;
    executor.run(amour);
  });
});
